- name: load platform variables
  include_vars: "{{ ansible_os_family|lower }}.yml"
  tags:
    - php

- name: install PHP PPA via apt-repository
  apt_repository: repo=ppa:ondrej/php5-5.6 state=present
  when: ansible_os_family == "Debian"
  tags:
    - php

- name: install common packages via apt
  apt: name={{ item }} state=latest
  with_items: php_role.common.packages
  when: ansible_os_family == "Debian"
  tags:
    - php

- name: install common packages via yum
  yum: name={{ item }} state=latest enablerepo=remi,remi-php56
  with_items: php_role.common.packages
  when: ansible_os_family == "RedHat"
  tags:
    - php

- name: install PHP extensions via apt
  apt: name={{ item }} state=latest
  with_items: php_role.extensions.packages
  when: ansible_os_family == "Debian"
  tags:
    - php

- name: install PHP extensions via yum
  yum: name={{ item }} state=latest enablerepo=remi,remi-php56
  with_items: php_role.extensions.packages
  when: ansible_os_family == "RedHat"
  tags:
    - php

- name: install PHP (FastCGI SAPI) via apt
  apt: name={{ item }} state=latest
  with_items: php_role.fpm.packages
  when: ansible_os_family == "Debian"
  tags:
    - php

- name: install PHP (FastCGI SAPI) via yum
  yum: name={{ item }} state=latest enablerepo=remi,remi-php56
  with_items: php_role.fpm.packages
  when: ansible_os_family == "RedHat"
  tags:
    - php

- name: copy default configurations on Ubuntu/Debian
  template: src={{ item.src }}.j2 dest=/etc/php5/{{ item.dest }}
  with_items:
    - { src: "php.ini", dest: "fpm/php.ini" }
    - { src: "php.ini", dest: "cli/php.ini" }
  when: ansible_os_family == "Debian"
  tags:
    - php

- name: copy default configurations on RHEL/CentOS
  template: src={{ item.src }}.j2 dest=/etc/{{ item.dest }}
  with_items:
    - { src: "php.ini", dest: "php.ini" }
  when: ansible_os_family == "RedHat"
  tags:
    - php

- name: copy apcu configuration on Debian/Ubuntu
  template: src={{ item.src }}.j2 dest=/etc/php5/{{ item.dest }}
  with_items:
    - { src: "mods-available/apcu.ini", dest: "mods-available/apcu.ini" }
  when: ansible_os_family == "Debian"
  tags:
    - php

- name: copy apcu configuration on RHEL/CentOS
  template: src={{ item.src }}.j2 dest=/etc/php.d/{{ item.dest }}
  with_items:
    - { src: "mods-available/apcu.ini", dest: "40-apcu.ini" }
  when: ansible_os_family == "RedHat"
  tags:
    - php

- name: copy redis configuration on Debian/Ubuntu
  template: src={{ item.src }}.j2 dest=/etc/php5/{{ item.dest }}
  with_items:
    - { src: "mods-available/redis.ini", dest: "mods-available/redis.ini" }
  when: ansible_os_family == "Debian"
  tags:
    - php

- name: copy redis configuration on RHEL/CentOS
  template: src={{ item.src }}.j2 dest=/etc/php.d/{{ item.dest }}
  with_items:
    - { src: "mods-available/redis.ini", dest: "50-redis.ini" }
  when: ansible_os_family == "RedHat"
  tags:
    - php

- name: copy pool's configurations on Debian/Ubuntu
  template: src=pool.d/www.conf.j2 dest=/etc/php5/fpm/pool.d/{{ item.key }}.conf
  with_dict: php_pool
  when: ansible_os_family == "Debian"
  tags:
    - php

- name: copy pool's configurations on RHEL/CentOS
  template: src=pool.d/www.conf.j2 dest=/etc/php-fpm.d/{{ item.key }}.conf
  with_dict: php_pool
  when: ansible_os_family == "RedHat"
  tags:
    - php

- name: create pool's groups
  group: name={{ item.value.group }} state=present system=yes
  when: item.value.group is defined
  with_dict: php_pool
  tags:
    - php

- name: create pool's users
  user: name={{ item.value.owner }} group={{ item.value.group }} state=present system=yes
  when: (item.value.owner is defined) and (item.value.group is defined)
  with_dict: php_pool
  tags:
    - php

- name: create log directories
  file:
    path={{ php_role.fpm.logdir }}/{{ item.key }}
    state=directory
    mode=0755
    owner={{ php_pool[item.value.pool]['owner']|default(php_role.fpm.owner) }}
    group={{ php_pool[item.value.pool]['group']|default(php_role.fpm.group) }}
    recurse=yes
  with_dict: stores
  tags:
    - php

- name: restart PHP-FPM
  command: service {{ php_role.fpm.service }} restart
  tags:
    - php
